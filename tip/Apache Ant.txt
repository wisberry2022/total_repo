Apache Ant
 => 자바 어플리케이션 빌드를 위한 커맨드 라인 툴
 => 자바 어플리케이션 빌드를 위해 컴파일, 어셈블, 테스트, 그리고 자바 앱 구동을 위한 내장 기능(built-in)이 존재
 => 자바 어플리케이션에만 국한되지 않고, C나 C++ 어플리케이션 빌드도 가능하다.
 => 자바로 작성된 프로그램이다.
 => Ant는 매우 유연하며, 빌드를 위한 폴더의 레이아웃이나 특정 코딩 컨벤션을 요구하지 않는다.

0. 왜 Ant를 사용하는가?
 => make, gnumake, gnumake, nmake, jam과 같은 기존 빌드 툴들은 쉘 기반이기 때문에 OS 종속적일 수 밖에 없다는 문제가 있으나 Ant는 이러한 문제를 극복했다.
	-> 다른 플랫폼에서도 어플리케이션을 빌드할 수 있도록 구성
 => Ant는 쉘 커맨드를 입력하는 대신, Java 클래스를 사용하여, xml 기반의 configuration file을 생성한다. 
 => 기존 쉘 커맨드가 가지고 있는 표현력은 가지지 못하나, 어느 플랫폼에서든 어플리케이션을 빌드할 수 있는 능력을 제공한다.

1. Ant 시작하기
 => Ant 시작 이전 체크해야 할 사항
	-> 자바 환경이 설치되어있는지 우선적으로 확인해야한다.
	-> 바이너리 파일을 다운로드 받는다.
	-> 디렉토리에 바이너리 파일(.zip) 파일을 압축해제한다.
	-> 환경 변수에 JAVA_HOME을 설정하고, Ant를 압축해제 한 디렉토리에 ANT_HOME 환경변수를 설정한다. 그리고 PATH에 %ANT_HOME%/bin 을 추가한다.
	-> ANT_HOME 디렉토리에 들어가 ant -f fetch.xml; -Ddset=system 명령어를 입력한다. 
		* 해당 명령어는 Ant에서 제공하는 기능들을 사용할 수 있도록 도와주는 라이브러리를 다운받는 명령어이다.
		* 해당 명령어를 실행하지 않으면, Ant에서 제공하는 대부분의 기능을 수행할 수 없다.
	-> Antlibs를 추가한다. 

1-1. System 요구사항(ant 1.9ver) - System Requirements
 => JDK를 설치하지 않을 경우 JRE가 있어도 Ant에서 제공하는 대부분의 기능을 사용할 수 없다.
	* JDK 1.5 이상, 
 => Ant 1.8ver은 JDK 1.4, 혹은 그 이상 버전에서 동작한다. Ant 1.7ver은 JDK 1.3 혹은 그 이상, Ant 1.6ver은 JDK 1.2 혹은 그 이상 ... 
